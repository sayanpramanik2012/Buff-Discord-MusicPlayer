name: Docker Image CI

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*.*.*'  # Match version tags like v1.0.0
  pull_request:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract version number or branch name
        id: extract_ref
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            BRANCH_NAME=${GITHUB_REF#refs/heads/}
            echo "VERSION=${BRANCH_NAME}" >> $GITHUB_ENV
          fi

      - name: Sanitize version
        id: sanitize_version
        run: |
          VERSION=${{ env.VERSION }}
          # Replace invalid characters in the version/tag name
          SANITIZED_VERSION=$(echo "${VERSION}" | tr '/' '-' | tr '[:upper:]' '[:lower:]')
          echo "SANITIZED_VERSION=${SANITIZED_VERSION}" >> $GITHUB_ENV

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag sayanpramanik2012/buff-discord-musicplayer:${{ env.SANITIZED_VERSION }}

      - name: Push the Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            sayanpramanik2012/buff-discord-musicplayer:${{ env.SANITIZED_VERSION }}
            sayanpramanik2012/buff-discord-musicplayer:latest

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Docker image version ${{ env.SANITIZED_VERSION }} released.
